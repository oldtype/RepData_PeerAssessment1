demo()
help(NaN)
x <- matrix(1:6, 2, 3)
x
x <- list(foo = 1:4, bar = 0.6)
x
x <- list(a = list(10, 12, 14), b = c(3.14, 2.81))
x
x[1]
x
x[[1]]
x[1][3]
x[[1]][[3]]
x <- c(1, 2, NA, 4, NA, 5)
is.na(x)
bad <- is.na(x)
bad
x[bad]
x[!bad]
help complete.cases
help(comeplete.case)
help(comeplete.cases)
help(complete.cases)
q()
pal <- colorRampPalette(c("red", "yellow", "blue"))
x <- rnom(100)
x <- rnorm(100)
plot(x, col = pal(100))
head(x)
plot(x, col = pal(10))
?setOldMethod
?setOldClass
data(warpbreaks)
head(warpbreaks)
aObj <- anova(warpbreaks$breaks ~ warpbreaks$wool + warpbreaks$tension)
summary(aObj)
aObj <- aov(warpbreaks$breaks ~ warpbreaks$wool + warpbreaks$tension)
summary(aObj)
?log
log(0.2/(1-0.2))
library(glm2)
data(crabs)
head(crabs)
install.packages('glm2')
library(glm2)
data(crabs)
head(crabs)
glm1 <- glm(crabs$Satellites ~ crabs$Width, family="poisson")
glm1
glm1$coeff
exp(glm1$coeff[0]) * exp(glm1$coeff[1])
glm1$coeff[0]
glm1$coeff[[0]
]
glm1$coeff$(Intercept)
str(glm$coeff)
?closure
glm1
glm1$coeff
glm1$coeff[0]
glm1$coeff[0][0]
glm1$coeff[1]
glm1$coeff[2]
exp(glm1$coeff[1]) * exp(glm1$coeff[2])
exp(glm1$coeff[2])
exp(glm1$coeff[1]) * exp(glm1$coeff[2] * 22)
data(quine)
lm1 = lm(log(Days + 2.5) ~., data=quine)
library(MASS)
data(quine)
lm1 = lm(log(Days + 2.5) ~., data=quine)
lm1
?step
f <- step(lm1)
fix(aObj)
set.seed(1)
rpois(5,2)
rpois(5,2)
rpois(5,2)
rpois(5,2)
set.seed(1)
rpois(5,2)
set.seed(10)
x <- rbinom(10,10,0.5)
y <- rnorm(10,0,20)
e <- 0.5 + 2.5 + y
x
y
e
?rbinom
e <- rnorm(10,0,20)
y <- 0.5 + 2.5*x + e
y
plot(x,y)
plot(x,x)
plot(x,y)
R.version.string
install.package("swirl")
install.packages("swirl")
library(swirl)
ls()
rm(list=())
?rm
rm(list=ls())
swirl()
5_7
5+7
x <- 5 + 7
x
y <- x - 3
y
c(1.1,9,3.14)
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z * 2 + 100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1, 2, 3, 4) + c(0, 10, 100)
z * 2 + 1000
my_div
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(0,10,by=0.5)
seq(5, 10, length=30)
my_seq <- seq(5, 10, 30)
my_seq <- seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
seq(along=my_seq)
seq_along(my_seq)
rep(0, times=40)
rep(c(0,1,2), times=10)
rep(c(0, 1, 2), each = 10)
num_vect <- c(0,5, 55, -10, 6)
num_vect <- c(0.5, 55, -10, 6)
c < 1
num_vect < 1
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
c(my_char, "your_name_here")
my_name <- c(my_char, "your_name_here")
my_name
paste(my_name, collaps=" ")
paste(my_name, collapse=" ")
paste("Hello", "world!", sep = " ")
poste(c("X", "Y", "Z"), sep="")
paste(c("X", "Y", "Z"), sep="")
paste(1:3, c("X", "Y", "Z"), sep="")
paste(LETTERS, 1:4, sep="-")
c(44, NA, 5, NA)
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_na
my_data
0 / 0
Inf - Inf
x <- c(rnorm(20), rep(NA, 20))
x
x[1:10]
x[is.na(x)]
y <- x[]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x >0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
c(foo = 11, bar = 2, norf = NA)
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect <- c(11, 2, NA)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["2"]
vect["bar"]
vect[c("foo", "var")]
vect[c("foo", "bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20, nrow=4, ncol=5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data)
colnames(my_data) <- cnames
my_data
?table
table(c(1,0,0,0,1,1,1,0,1,1,0,0,1,0))
barplot(table(c(1,0,0,0,1,1,1,0,1,1,0,0,1,0)))
?with
?subset
x <- c(0,0,1,1,1,1,0,0,0,1,1,1,0,1)
subset(x, > 0)
plot(c(1,2,3), c(2,5,3))
?data
?data.frame
x <- data.frame(x = 1, y = 1:10)
x
subset(x, y > 5)
?cl
?clear
?remove
remove(x)
setwd("~/Documents/Coursera.org/Data Scientist Specializaion/Reproducible Research/Project 1/repdata-007/")
data <- read.csv('activity.csv', colClasses=c(NA, "Date", NA))
total <- aggregate(data$steps, list(date = data$date), FUN = sum)
total <- total[!is.na(total$x), ]   ## remove NA's
hist(total$x, xlab="Total number of steps",
main="Total number of steps taken each day")
mean_total <- mean(total$x)
median_total <- median(total$x)
data2 <- data[!is.na(data$steps), ]   # remove NA's
avg <- aggregate(data2$steps, list(interval=data2$interval), FUN=mean)
with(avg, plot(interval, x, type="l",
ylab="average number of steps taken, averaged across all days"))
max_interval <- avg[avg$x %in% max(avg$x), ]
sum(is.na(data$steps))
data3 <- data
missing <- which(is.na(data3$steps))   ## indices of NA steps values
mean_by_interval <- rep(avg$x, nrow(data3)/nrow(avg))
data3$steps[missing] <- mean_by_interval[missing]   ## replace NA's
total2 <- aggregate(data3$steps, list(date = data3$date), FUN = sum)
hist(total2$x, xlab="Total number of steps (NA's replaced)",
main="Total number of steps taken each day")
mean_total2 <- mean(total2$x)
median_total2 <- median(total2$x)
data4 <- data
data4$date <- weekdays(as.Date(data4$date, format = "%Y-%m-%d"))
data4$weekend <- ifelse(data4$date == c("Saturday", "Sunday"),
c("weekdend"), c("weekday"))
avg2 <- aggregate(steps ~ interval + weekend, data = data4, mean)
View(avg2)
xyplot(steps ~ interval | weekend, type="1", layout = c(1, 2),
xlab = "interval", ylab = "no. of steps", col = "green")
library(lattice)
xyplot(steps ~ interval | weekend, type="1", layout = c(1, 2),
xlab = "interval", ylab = "no. of steps", col = "green")
xyplot(steps ~ interval | weekend, avg2, type="1", layout = c(1, 2),
xlab = "interval", ylab = "no. of steps", col = "green")
avg2 <- aggregate(steps ~ interval + weekend, data = data4, mean)
xyplot(steps ~ interval | weekend, avg2, type="1", layout = c(1, 2),
xlab = "interval", ylab = "no. of steps", col = "green")
str(data4)
data4$weekend <- factor(data4$weekend)
avg2 <- aggregate(steps ~ interval + weekend, data = data4, mean)
xyplot(steps ~ interval | weekend, avg2, type="1", layout = c(1, 2),
xlab = "interval", ylab = "no. of steps", col = "green")
str(data4)
data4$weekend <- ifelse(data4$date == c("토요일", "일요일"),
c("weekdend"), c("weekday"))
data4$weekend <- factor(data4$weekend)
str(data4)
avg2 <- aggregate(steps ~ interval + weekend, data = data4, mean)
xyplot(steps ~ interval | weekend, avg2, type="1", layout = c(1, 2),
xlab = "interval", ylab = "no. of steps", col = "green")
str(data)
data4 <- data3
data4$date <- weekdays(as.Date(data4$date, format = "%Y-%m-%d"))
data4$weekend <- ifelse(data4$date == c("토요일", "일요일"),
c("weekdend"), c("weekday"))
data4$weekend <- factor(data4$weekend)
avg2 <- aggregate(steps ~ interval + weekend, data = data4, mean)
library(lattice)
xyplot(steps ~ interval | weekend, avg2, type="1", layout = c(1, 2),
xlab = "interval", ylab = "no. of steps", col = "green")
str(data3)
str(data4)
xyplot(steps ~ interval | weekend, data4, type="1", layout = c(1, 2),
xlab = "interval", ylab = "no. of steps", col = "green")
avg2 <- aggregate(steps ~ interval + weekend, data = data4, mean)
str(avg2)
xyplot(steps ~ interval | weekend, avg2, type="1", layout = c(1, 2))
xyplot(steps ~ interval | weekend, avg2, type="l", layout = c(1, 2))
